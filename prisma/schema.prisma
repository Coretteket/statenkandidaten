// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  relationMode = "prisma"
  url          = env("DATABASE_URL")
}

model Province {
  id             String         @id
  name           String
  constituencies Constituency[]
  website        String
  seats          Int
}

model Constituency {
  id             String         @id
  name           String
  provinceId     String
  province       Province       @relation(fields: [provinceId], references: [id])
  lists          List[]
  municipalities Municipality[]

  @@index([provinceId])
}

model Municipality {
  id             String       @id
  name           String
  constituencyId String
  constituency   Constituency @relation(fields: [constituencyId], references: [id])
  alias          String?

  @@index([constituencyId])
}

model Party {
  id      String  @id @default(nanoid(6))
  name    String  @unique
  alias   String?
  lists   List[]
  website String?
}

model List {
  id             String             @id @default(nanoid(6))
  name           String
  position       Int
  constituencyId String
  constituency   Constituency       @relation(fields: [constituencyId], references: [id])
  party          Party[]
  website        String?
  candidates     CandidatesOnList[]

  @@unique([constituencyId, position])
  @@index([constituencyId])
}

model Candidate {
  id        String             @id
  initials  String
  firstname String?
  prefix    String?
  surname   String
  gender    Gender?
  locality  String
  incumbent Boolean?
  elected   Boolean?
  lists     CandidatesOnList[]

  @@unique([initials, surname, locality])
}

model CandidatesOnList {
  candidateId String
  candidate   Candidate @relation(fields: [candidateId], references: [id], onDelete: Cascade)
  listId      String
  list        List      @relation(fields: [listId], references: [id], onDelete: Cascade)
  position    Int

  @@unique([candidateId, listId, position])
  @@index([listId])
}

enum Gender {
  MALE
  FEMALE
  OTHER
}
